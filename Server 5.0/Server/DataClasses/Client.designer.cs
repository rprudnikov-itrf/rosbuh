#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RosService.DataClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="бухгалтерия")]
	public partial class ClientDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertassembly_tblAttribute(assembly_tblAttribute instance);
    partial void Updateassembly_tblAttribute(assembly_tblAttribute instance);
    partial void Deleteassembly_tblAttribute(assembly_tblAttribute instance);
    #endregion
		
		public ClientDataContext() : 
				base(global::RosService.Properties.Settings.Default.бухгалтерияConnectionString, mappingSource)
		{
			OnCreated();
		}
		
        //public ClientDataContext(string connection) : 
        //        base(connection, mappingSource)
        //{
        //    OnCreated();
        //}
		
		public ClientDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<assembly_tblAttribute> assembly_tblAttributes
		{
			get
			{
				return this.GetTable<assembly_tblAttribute>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.assembly_tblAttribute")]
	public partial class assembly_tblAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _id_attribute;
		
		private string _Namespace;
		
		private decimal _id_parent;
		
		private decimal _id_type;
		
		private string _HashCode;
		
		private string _TypeHashCode;
		
		private string _Name;
		
		private string _Описание;
		
		private int _MemberType;
		
		private string _RegisterType;
		
		private string _BaseType;
		
		private string _ReflectedType;
		
		private bool _IsReadOnly;
		
		private bool _IsAutoIncrement;
		
		private bool _IsSystem;
		
		private bool _IsSetDefaultValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_attributeChanging(decimal value);
    partial void Onid_attributeChanged();
    partial void OnNamespaceChanging(string value);
    partial void OnNamespaceChanged();
    partial void Onid_parentChanging(decimal value);
    partial void Onid_parentChanged();
    partial void Onid_typeChanging(decimal value);
    partial void Onid_typeChanged();
    partial void OnHashCodeChanging(string value);
    partial void OnHashCodeChanged();
    partial void OnTypeHashCodeChanging(string value);
    partial void OnTypeHashCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnОписаниеChanging(string value);
    partial void OnОписаниеChanged();
    partial void OnMemberTypeChanging(int value);
    partial void OnMemberTypeChanged();
    partial void OnRegisterTypeChanging(string value);
    partial void OnRegisterTypeChanged();
    partial void OnBaseTypeChanging(string value);
    partial void OnBaseTypeChanged();
    partial void OnReflectedTypeChanging(string value);
    partial void OnReflectedTypeChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    partial void OnIsAutoIncrementChanging(bool value);
    partial void OnIsAutoIncrementChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    partial void OnIsSetDefaultValueChanging(bool value);
    partial void OnIsSetDefaultValueChanged();
    #endregion
		
		public assembly_tblAttribute()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_attribute", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal id_attribute
		{
			get
			{
				return this._id_attribute;
			}
			set
			{
				if ((this._id_attribute != value))
				{
					this.Onid_attributeChanging(value);
					this.SendPropertyChanging();
					this._id_attribute = value;
					this.SendPropertyChanged("id_attribute");
					this.Onid_attributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namespace", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_parent", DbType="Decimal(18,0) NOT NULL")]
		public decimal id_parent
		{
			get
			{
				return this._id_parent;
			}
			set
			{
				if ((this._id_parent != value))
				{
					this.Onid_parentChanging(value);
					this.SendPropertyChanging();
					this._id_parent = value;
					this.SendPropertyChanged("id_parent");
					this.Onid_parentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", DbType="Decimal(18,0) NOT NULL")]
		public decimal id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashCode", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string HashCode
		{
			get
			{
				return this._HashCode;
			}
			set
			{
				if ((this._HashCode != value))
				{
					this.OnHashCodeChanging(value);
					this.SendPropertyChanging();
					this._HashCode = value;
					this.SendPropertyChanged("HashCode");
					this.OnHashCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeHashCode", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string TypeHashCode
		{
			get
			{
				return this._TypeHashCode;
			}
			set
			{
				if ((this._TypeHashCode != value))
				{
					this.OnTypeHashCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeHashCode = value;
					this.SendPropertyChanged("TypeHashCode");
					this.OnTypeHashCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(860) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Описание", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Описание
		{
			get
			{
				return this._Описание;
			}
			set
			{
				if ((this._Описание != value))
				{
					this.OnОписаниеChanging(value);
					this.SendPropertyChanging();
					this._Описание = value;
					this.SendPropertyChanged("Описание");
					this.OnОписаниеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberType", DbType="Int NOT NULL")]
		public int MemberType
		{
			get
			{
				return this._MemberType;
			}
			set
			{
				if ((this._MemberType != value))
				{
					this.OnMemberTypeChanging(value);
					this.SendPropertyChanging();
					this._MemberType = value;
					this.SendPropertyChanged("MemberType");
					this.OnMemberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterType", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RegisterType
		{
			get
			{
				return this._RegisterType;
			}
			set
			{
				if ((this._RegisterType != value))
				{
					this.OnRegisterTypeChanging(value);
					this.SendPropertyChanging();
					this._RegisterType = value;
					this.SendPropertyChanged("RegisterType");
					this.OnRegisterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseType", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string BaseType
		{
			get
			{
				return this._BaseType;
			}
			set
			{
				if ((this._BaseType != value))
				{
					this.OnBaseTypeChanging(value);
					this.SendPropertyChanging();
					this._BaseType = value;
					this.SendPropertyChanged("BaseType");
					this.OnBaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReflectedType", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string ReflectedType
		{
			get
			{
				return this._ReflectedType;
			}
			set
			{
				if ((this._ReflectedType != value))
				{
					this.OnReflectedTypeChanging(value);
					this.SendPropertyChanging();
					this._ReflectedType = value;
					this.SendPropertyChanged("ReflectedType");
					this.OnReflectedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAutoIncrement", DbType="Bit NOT NULL")]
		public bool IsAutoIncrement
		{
			get
			{
				return this._IsAutoIncrement;
			}
			set
			{
				if ((this._IsAutoIncrement != value))
				{
					this.OnIsAutoIncrementChanging(value);
					this.SendPropertyChanging();
					this._IsAutoIncrement = value;
					this.SendPropertyChanged("IsAutoIncrement");
					this.OnIsAutoIncrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSetDefaultValue", DbType="Bit NOT NULL")]
		public bool IsSetDefaultValue
		{
			get
			{
				return this._IsSetDefaultValue;
			}
			set
			{
				if ((this._IsSetDefaultValue != value))
				{
					this.OnIsSetDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._IsSetDefaultValue = value;
					this.SendPropertyChanged("IsSetDefaultValue");
					this.OnIsSetDefaultValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
